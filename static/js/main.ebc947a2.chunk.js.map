{"version":3,"sources":["asset/sample.pdf","readpdf/index.js","components/Theory.js","components/Navbar/index.js","asset/quizQuestion/index.js","components/QuestionBox.js","components/QuestionCount.js","components/AnswerOption.js","quiz/index.js","components/ResultBox.js","quizRender/App.js","index.js"],"names":["module","exports","Readpdf","props","useState","numPages","setNumPages","pageNumber","setPageNumber","changePage","offset","prevPageNumber","pdf","file","options","workerSrc","onLoadSuccess","type","disabled","onClick","Theory","Vpdf","samplePDF","Navbar","className","to","quizQuestions","question","answerindex","answers","content","Question","QuestionCount","counter","total","quizQuestion","length","href","viewreults","AnswerOption","id","answerType","index","selectedAnswer","onAnswerSelected","answerContent","Quiz","key","questionId","questionTotal","answerOptions","map","answer","setPreviousQuestion","setNextQuestion","Result","this","quizResult","_data","renderQuestions","React","Component","App","state","allQuestions","selectedAnswers","result","bind","handleAnswerSelected","e","obj","parseInt","target","value","console","log","setState","answersCount","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","Math","max","apply","filter","preventDefault","renderResult","renderQuiz","MANEZCO_APP","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebc947a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sample.51029baf.pdf\";","import React, { useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n//this module is to read pdf file\r\nexport default function Readpdf(props) {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1); //setting 1 to show fisrt page\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n    setPageNumber(1);\r\n  }\r\n\r\n  function changePage(offset) {\r\n    setPageNumber(prevPageNumber => prevPageNumber + offset);\r\n  }\r\n\r\n  function previousPage() {\r\n    changePage(-1);\r\n  }\r\n\r\n  function nextPage() {\r\n    changePage(1);\r\n  }\r\n\r\n  const { pdf } = props;\r\n\r\n  return (\r\n    <>\r\n      <Document\r\n        file={pdf}\r\n        options={{ workerSrc: \"/pdf.worker.js\" }}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page pageNumber={pageNumber} />\r\n      </Document>\r\n      <div>\r\n        <p>\r\n          Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\r\n        </p>\r\n        <button type=\"button\" disabled={pageNumber <= 1} onClick={previousPage}>\r\n          Previous\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          disabled={pageNumber >= numPages}\r\n          onClick={nextPage}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, {Component} from \"react\";  \r\nimport Readpdf from '../readpdf';\r\nimport samplePDF from '../asset/sample.pdf'; //pdf is stored in this app\r\n\r\n\r\n//this calls ReadPdf module to view the pdf file, can be updated future with more data/files\r\nexport default function Theory(){\r\n    //Vpdf is for making props to view pdf\r\n     const Vpdf = () => {\r\n        return  <Readpdf pdf={samplePDF}/> \r\n    }; \r\n  \r\n    return(\r\n       <Vpdf/>\r\n    )\r\n} \r\n\r\n","/*This is navigation bar. Re-usable to anywhere in the application */\r\nimport React, {useState} from \"react\";\r\nimport './style.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = props=>{\r\n    return(\r\n      <div className=\"navbar\">\r\n          <ul className=\"navbarMenu\">\r\n              <li><NavLink to={\"theory\"}>Theory</NavLink> </li>\r\n              <li><NavLink to={\"quiz\"}>Quiz</NavLink> </li>\r\n          </ul>\r\n      </div>\r\n    );\r\n};\r\nexport default Navbar;\r\n","/*this is the databank written in Object stored in array, completely isolated so that codes can be updated easily in the future*/\r\nvar quizQuestions = [\r\n    { \r\n        question: \r\n         \"17 a prime number \", \r\n        answerindex: 1, //index of correct answer\r\n        answers: [\r\n            {  \r\n                content: \"True\" //dispalying value \r\n            },\r\n            {\r\n                content: \"False\" \r\n            },\r\n        ]\r\n\r\n    },\r\n    { \r\n        question: \r\n        \"23 is not prime number \", \r\n        answerindex: 1,\r\n        answers: [\r\n            {\r\n                content: \"True\" \r\n            },\r\n            {         \r\n                content: \"False\" \r\n            },\r\n        ]\r\n\r\n    }, \r\n    { \r\n        question: \r\n        \"27 is not a Prime Number because it can be divided by: \", \r\n        answerindex: 2,\r\n        answers: [\r\n            {\r\n                content: \"3 and 5\" \r\n            },\r\n            {\r\n\r\n                content: \"3 and 9\" \r\n            },\r\n            {\r\n         \r\n                content: \"3 and 6\" \r\n            },\r\n            {\r\n                content: \"1 and 21\" \r\n            },\r\n\r\n        ]\r\n\r\n    }, \r\n    { \r\n        question: \r\n        \"29 is _____\", \r\n        answerindex: 2,\r\n        answers: [\r\n            {\r\n                content: \"not a Prime Number\" \r\n            },\r\n            {\r\n         \r\n                content: \"Is a Prime Number\" \r\n            },\r\n            {\r\n         \r\n                content: \"Sometimes a Prime Number\" \r\n            },\r\n\r\n        ]\r\n\r\n    },\r\n    { \r\n        question: \r\n        \"31 is a prime number ?\", \r\n        answerindex: 1,\r\n        answers: [\r\n            {\r\n                content: \"True\" \r\n            },\r\n            {        \r\n                content: \"False\" \r\n            },\r\n        ]\r\n\r\n\r\n    },\r\n    { \r\n        question: \r\n        \"39 is: \",  \r\n        answerindex: 3,\r\n        answers: [\r\n            {\r\n                content: \"not a Prime Number, can be divided by 30 and 9\" \r\n            },\r\n            {\r\n        \r\n                content: \"Is a Prime Number\" \r\n            },\r\n            { \r\n                content: \"is not a prime number because it can be divided by 3 and 13\",\r\n            },\r\n            {\r\n                content: \"is not a prime number because it can be divided by 13 and 9\"\r\n            },\r\n\r\n        ]\r\n\r\n    },\r\n    { \r\n        question: \r\n        \"47 is: \",  \r\n        answerindex: 2,\r\n        answers: [\r\n            {\r\n                content: \"Not a Prime Number as it can be divided by 7 and 3\" \r\n            },\r\n            {\r\n                content: \"Is a Prime Number\" \r\n            },\r\n            {  \r\n                content: \"is not a prime number because it can be divided by 4 and 7\",\r\n            },\r\n            { \r\n                content: \"is not a prime number because it can be divided by 47 and 1\"\r\n            },\r\n\r\n        ]\r\n\r\n    },\r\n    { \r\n        question: \r\n        \"41 is: \",  \r\n        answerindex: 2,\r\n        answers: [\r\n            {\r\n                content: \"Not a Prime Number as it can be divided by 7 and 3\" \r\n            },\r\n            {\r\n                content: \"Is a Prime Number\" \r\n            },\r\n            {  \r\n                content: \"is not a prime number because it can be divided by 4 and 7\",\r\n            },\r\n            { \r\n                content: \"is not a prime number because it can be divided by 47 and 1\"\r\n            },\r\n\r\n        ]\r\n\r\n    },\r\n    { \r\n        question: \r\n        \"63 is not a prime number as it can be divided by: \",   \r\n        answerindex: 1,\r\n        answers: [\r\n            {\r\n                content: \"Not a Prime Number as it can be divided by 3 and 17\" \r\n            },\r\n            {\r\n                content: \"Is a Prime Number\" \r\n            },\r\n            { \r\n                content: \"is not a prime number because it can be divided by 4 and 7\",\r\n            },\r\n            { \r\n                content: \"is not a prime number because it can be divided by 47 and 1\"\r\n            },\r\n\r\n        ]\r\n\r\n    },  \r\n   \r\n    ]; \r\n    \r\n      export default quizQuestions;\r\n\r\n    ","import React from 'react';\r\n//function to displaying questions, reusable to anywhere in the app\r\nfunction Question(props) {\r\n\r\n  return (\r\n    <div>\r\n     <h2 className=\"question\">{props.content}</h2>\r\n\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Question;","import React from 'react';\r\nimport quizQuestion from '../asset/quizQuestion';\r\n//function to count the question numbers\r\nfunction QuestionCount(props) {\r\n\r\n  return (\r\n    <div className=\"questionCount\">\r\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\r\n       {props.counter === quizQuestion.length ? (<a className=\"result-link\" href=\"\" onClick={props.viewreults}>View Results</a>) : (<div className=\"bottom-footer\"></div>)}\r\n    </div>\r\n  );\r\n//quizQuestion.length allows dynamicity, numbers of questions can easily varied\r\n}\r\n\r\nexport default QuestionCount;","import React from 'react';\r\n//function to make dynamic quiz-options, re-usable to anywhere if required\r\nfunction AnswerOption(props) {\r\n\r\n  return (\r\n    <li className=\"answerOption\">\r\n      <button id=\"horizontal-list\"\r\n        type=\"button\"\r\n        id={props.answerType}\r\n        value={props.index}\r\n        className={(props.selectedAnswer === props.index) ? 'selected-btn' : '' }\r\n        onClick={props.onAnswerSelected}\r\n      >{props.answerContent}</button>\r\n    </li>\r\n  );\r\n\r\n}\r\n\r\nexport default AnswerOption;","//This module prepares the baseline of the quiz by all important modules created\r\nimport React from 'react';\r\nimport Question from '../components/QuestionBox';\r\nimport QuestionCount from '../components/QuestionCount';\r\nimport AnswerOption from '../components/AnswerOption';\r\nimport quizQuestions from '../asset/quizQuestion/index';\r\n\r\nfunction Quiz(props) {\r\n\r\n  function renderAnswerOptions(key,index) {\r\n    return (\r\n      <AnswerOption\r\n        index ={index}\r\n        key={key.content}\r\n        answerContent={key.content}\r\n        answerType={key.type}\r\n        answer={props.answer}\r\n        questionId={props.questionId}\r\n        selectedAnswer={props.selectedAnswer}\r\n        onAnswerSelected={props.onAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n      <div key={props.questionId} className=\"quiz-story\">\r\n        <QuestionCount counter={props.counter} viewreults={props.viewreults}\r\n          counter={props.questionId}\r\n          total={props.questionTotal}\r\n        />\r\n\t\t<div className='quiz-container'>\r\n        <Question  content={props.question} />\r\n        <ul className=\"answerOptions\">\r\n          {props.answerOptions.map(renderAnswerOptions)}\r\n        </ul>\r\n        <div className=\"bottom-footer\" >\r\n          {props.counter > 0 ? (<button id=\"previous-btn\" onClick={props.setPreviousQuestion} >Previous</button>) : (<div></div>)}\r\n\r\n          {props.counter < (quizQuestions.length-1) ? (<button id=\"next-btn\" onClick={props.setNextQuestion} >Next</button>) : (<div></div>)}\r\n      </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Quiz;","/* import React from 'react'; \r\nimport \"../quiz/style.css\"; \r\n\r\nconst Result = ({score, playAgain}) => ( \r\n<div className=\"score-board\"> \r\n\t<div className=\"score\"> Your score is {score} / 5 correct answer ! ! ! </div> \r\n\t<button className=\"playBtn\" onClick={playAgain} > Play Again </button> \r\n</div> \r\n) \r\n\r\nexport default Result; \r\n */\r\n\r\nimport React from 'react';\r\n\r\nclass Result extends React.Component {\r\n \r\n  renderQuestions(){\r\n    return  this.props.quizResult.map((_data,index) =>{\r\n        return <div className=\"list-grp\">{_data.question} <br/>correct answer is option: {_data.answerindex} :  and you have selected {this.props.answers[index]+1} { ((this.props.answers[index]+1) === _data.answerindex) ? (<span className=\"status\">Excellent!!!</span>) : ''}</div>\r\n    })\r\n  }\r\n  render (){\r\n    return (\r\n    <div  className=\"quiz-story\">\r\n      <div>\r\n        <strong>Lets see your results</strong>!\r\n        <div>{this.renderQuestions()}</div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Result;","import React, { Component } from 'react';\r\nimport quizQuestions from '../asset/quizQuestion';\r\nimport Quiz from '../quiz';\r\nimport Result from '../components/ResultBox';\r\nimport './app.css';\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n   super(props);\r\n    this.state = {\r\n      counter: 0,\r\n      questionId: 1,\r\n      question: '',\r\n      answerOptions: [],\r\n      allQuestions : [],\r\n      answer: '',\r\n      selectedAnswers : {},\r\n      result: ''\r\n    };\r\n    this.setNextQuestion = this.setNextQuestion.bind(this);\r\n    this.setPreviousQuestion = this.setPreviousQuestion.bind(this);\r\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\r\n    this.viewreults = this.viewreults.bind(this);\r\n\r\n\r\n  }\r\n  handleAnswerSelected(e){\r\n    var _self = this;\r\n    var obj = _self.state.selectedAnswers;\r\n    var index = parseInt(e.target.value);\r\n    console.log(\"for selected question number \" + (_self.state.counter + 1) +  \" answer is \" + index + \" selected\");\r\n    var Qindex = (_self.state.counter )\r\n    // create map and store all selected answers with quiz Questions\r\n    obj[Qindex] = index;\r\n    _self.setState({selectedAnswers : obj})\r\n\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({\r\n      question: quizQuestions[0].question,\r\n      answerOptions : quizQuestions[0].answers,\r\n      allQuestions : quizQuestions\r\n    });\r\n  }\r\n\r\n\r\n  setNextQuestion() {\r\n    const counter = this.state.counter + 1;\r\n    const questionId = this.state.questionId + 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question,\r\n      answerOptions: quizQuestions[counter].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n  setPreviousQuestion() {\r\n    const counter = this.state.counter - 1;\r\n    const questionId = this.state.questionId - 1;\r\n\r\n    this.setState({\r\n      counter: counter,\r\n      questionId: questionId,\r\n      question: quizQuestions[counter].question,\r\n      answerOptions: quizQuestions[counter].answers,\r\n      answer: ''\r\n    });\r\n  }\r\n\r\n  getResults() {\r\n    const answersCount = this.state.answersCount;\r\n    const answersCountKeys = Object.keys(answersCount);\r\n    const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\r\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\r\n\r\n    return answersCountKeys.filter((key) => answersCount[key] === maxAnswerCount);\r\n  }\r\n\r\n  setResults(result) {\r\n    if (result.length === 1) {\r\n      this.setState({ result: result[0] });\r\n    } else {\r\n      this.setState({ result: 'Undetermined' });\r\n    }\r\n  }\r\n\r\n  renderQuiz() {\r\n    return (\r\n      <Quiz viewreults={this.viewreults}\r\n        setNextQuestion={this.setNextQuestion}\r\n        counter={this.state.counter}\r\n        setPreviousQuestion={this.setPreviousQuestion}\r\n        answer={this.state.answer}\r\n        selectedAnswer = {this.state.selectedAnswers[this.state.counter]}\r\n        answerOptions={this.state.answerOptions}\r\n        questionId={this.state.questionId}\r\n        question={this.state.question}\r\n        questionTotal={quizQuestions.length}\r\n        onAnswerSelected = {this.handleAnswerSelected}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderResult() {\r\n    return (\r\n      <Result quizResult={this.state.allQuestions} answers={this.state.selectedAnswers} />\r\n    );\r\n  }\r\n  viewreults(e){\r\n    e.preventDefault();\r\n    this.setState({result : true})\r\n  }\r\n // decide to render result or quiz\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n         <div className=\"App-header\">\r\n          <h3>Quiz Assignment :</h3>\r\n        </div> \r\n        {this.state.result ? this.renderResult() : this.renderQuiz()}\r\n      </div>\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React, {Component} from \"react\"; \r\nimport ReactDOM from \"react-dom\"; \r\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\r\nimport Theory from './components/Theory';\r\nimport Navbar from './components/Navbar';\r\nimport App from './quizRender/App';\r\n\r\n//final compilation\r\nclass MANEZCO_APP extends Component { \r\n\trender() {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t \t<Router>\r\n\t\t\t<Navbar/>\r\n\t\t\t<Route path={\"/quiz_app/\"} component={Theory} />\r\n            <Route path={\"/quiz_app/theory\"}  component={Theory} />\r\n            <Route path={\"/quiz_app/quiz\"} component={App} />           \r\n\t\t\t</Router> \r\n\t\t\t\r\n\t\t</>\r\n\t\t) \r\n\t} \r\n \r\n} \r\n\r\nReactDOM.render(<MANEZCO_APP/>, document.getElementById(\"root\")); \r\n"],"sourceRoot":""}